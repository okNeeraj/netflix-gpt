{"version":3,"file":"static/js/700.826a9e1b.chunk.js","mappings":"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","sources":["auth/authenticate.js","components/SignInForm.js","pages/SignIn.js","services/firebase.js","validator/validate.js"],"sourcesContent":["import { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../services/firebase\";\n\nconst authenticate = async (email, password) => {\n  const response = {};\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    response.user = user;\n  } catch (error) {\n    response.error = error;\n  }\n  return response;\n}\n\nexport default authenticate;\n","import { Link, useNavigate } from \"react-router-dom\";\nimport validate from \"../validator/validate\";\nimport { PAGE } from \"../router/routes\";\nimport { useRef, useState } from \"react\";\nimport authenticate from \"../auth/authenticate\";\n\nconst SignInform = () => {\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [authError, setAuthError] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const [emailPhone, setEmailPhone] = useState('test@demo.com');\n  const [password, setPassword] = useState('Test@123');\n  const navigate = useNavigate();\n\n  const handleEmailPhone = (event) => {\n    setEmailPhone(event.target.value);\n  };\n\n  const handlePassword = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleSignIn = async () => {\n    // Client side validation\n    const isError = validate(\n      emailPhone,\n      password\n    );\n    setErrorMessage(isError);\n    if (isError) return;\n    setLoadingBtn(true);\n\n    // Send provided credential to server for validation\n    const userCredential = await authenticate(emailPhone, password);\n    let errorMessage = null;\n    switch (userCredential?.error?.code) {\n      case \"auth/user-disabled\":\n        errorMessage = \"Your account has been disabled!\"\n        break;\n\n      case \"auth/invalid-login-credentials\":\n        errorMessage = \"Invalid login credentials.\"\n        break;\n\n      default:\n        errorMessage = \"Something went wrong with your credentials.\"\n        break;\n    }\n    setAuthError(errorMessage);\n    setLoadingBtn(false)\n\n    if (userCredential?.error) return;\n    navigate(PAGE.BROWSE);\n  }\n\n  return (\n    <div className='bg-black/70 w-full sm:w-[450px] m-auto px-6 md:px-16 py-8 md:py-12 mx-4 sm:mx-auto flex items-center rounded-lg'>\n      <div className=\"w-full\">\n        <h1 className=\"mb-5 text-white text-3xl\">Sign In</h1>\n        {authError && (\n          <div className=\"p-3 bg-[#e87c03] text-white text-xs rounded-md mb-5\">{authError}</div>\n        )}\n        <div className=\"mb-2 text-white\">\n          <input type=\"text\" value={emailPhone} onChange={handleEmailPhone} placeholder=\"Enter Email\" autoComplete=\"username\" className={`px-4 py-4 w-full text-white bg-[#333] border-b-2 rounded-[4px] focus:bg-[#4d4c4c] focus-visible:outline-none text-sm ${errorMessage?.emailPhone ? 'border-[#e87c03]' : 'border-transparent'}`} />\n          <div className=\"error px-1 py-2 text-[#e87c03] text-xs\">{errorMessage?.emailPhone}</div>\n        </div>\n        <form onSubmit={(e) => e.preventDefault()}>\n          <div className=\"mb-2 text-white\">\n            <input type=\"password\" value={password} onChange={handlePassword} placeholder=\"Password\" autoComplete=\"password\" className={`px-4 py-4 w-full text-white bg-[#333] border-b-2 rounded-[4px] focus:bg-[#4d4c4c] focus-visible:outline-none text-sm ${errorMessage?.password ? 'border-[#e87c03]' : 'border-transparent'}`} />\n            <div className=\"error px-1 py-2 text-[#e87c03] text-xs\">{errorMessage?.password}</div>\n          </div>\n          <div className=\"my-2\">\n            <button onClick={handleSignIn} disabled={loadingBtn ? true : false} className=\"flex items-center justify-center px-4 py-3 mt-4 bg-red-primary text-white w-full rounded-[4px] disabled:bg-red-800\">\n              {\n                loadingBtn ? <div className=\"w-5 h-5 border-t m-[2px] border-gray-300 border-solid rounded-full animate-spin\"></div> : 'Sign In'\n              }\n            </button>\n          </div>\n        </form>\n        <div className=\"flex items-center justify-between mt-3\">\n          <div className=\"flex gap-2 items-center\">\n            <input id=\"rememberPswrd\" type='checkbox' className=\"appearance-none rounded-sm w-4 h-4 bg-[#333] relative flex items-center justify-center checked:bg-[#4d4c4c] checked:text-white checked:before:content-['âœ“'] before:absolute \" />\n            <label htmlFor='rememberPswrd' className='text-xs cursor-pointer'>Remember Password</label>\n          </div>\n          <div className='help'>\n            <a href='#!' className='text-xs hover:underline'>Need Help?</a>\n          </div>\n        </div>\n        <div className=\"text-md mt-8 flex items-center gap-2\">\n          <span className='text-sm'>\n            New to NetflixGPT?\n          </span>\n          <Link to={PAGE.SIGNUP} className='text-white text-sm hover:underline'>Sign up now</Link>\n        </div>\n      </div >\n    </div >\n  )\n}\n\nexport default SignInform;\n","import SignInform from \"../components/SignInForm\";\nimport { POSTER_BG } from \"../utils/constants\";\n\nconst SignIn = () => {\n  return (\n    <div className=\"relative text-gray-500 min-h-screen\">\n      <div className=\"absolute -z-[1] min-h-screenf h-full\">\n        <img src={POSTER_BG} alt=\"NetflixGPT\" className=\"w-screen h-full object-cover\" />\n      </div>\n      <div className=\"flex items-center min-h-screen bg-black/60\">\n        <SignInform />\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn;\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: \"netflixgpt-aaf25.firebaseapp.com\",\n  projectId: \"netflixgpt-aaf25\",\n  storageBucket: \"netflixgpt-aaf25.appspot.com\",\n  messagingSenderId: \"851568533147\",\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: \"G-CT2V2NGGPV\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\ngetAnalytics(app);\n\nexport const auth = getAuth();\n","const validate = (emailPhone, password, confirmPassword) => {\n  const errors = {};\n\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  const phoneRegex = /^[0-9]{10}$/;\n\n  if (!emailRegex.test(emailPhone) && !phoneRegex.test(emailPhone)) {\n    errors.emailPhone = 'Please enter a valid email address or phone number.';\n  }\n\n  if (!password) {\n    errors.password = 'Password password cannot be empty.';\n  } else {\n    if (password.length < 8 || password.length > 16) {\n      errors.password = 'Password must be between 8 and 16 characters.';\n    }\n    if (!/(?=.*[a-z])/.test(password)) {\n      errors.password = 'Password must contain at least one lowercase letter.';\n    }\n    if (!/(?=.*[A-Z])/.test(password)) {\n      errors.password = 'Password must contain at least one uppercase letter.';\n    }\n    if (!/(?=.*\\d)/.test(password)) {\n      errors.password = 'Password must contain at least one digit.';\n    }\n  }\n\n  if (confirmPassword !== undefined) {\n    const trimmedConfirmPassword = confirmPassword.trim();\n    if (trimmedConfirmPassword === '') {\n      errors.confirmPassword = 'Confirm password cannot be empty.';\n    } else if (trimmedConfirmPassword !== password) {\n      errors.confirmPassword = 'Passwords do not match.';\n    }\n  }\n\n  return Object.keys(errors).length === 0 ? null : errors;\n}\n\nexport default validate;\n"],"names":["_x","_x2","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","email","password","response","userCredential","user","wrap","_context","prev","next","signInWithEmailAndPassword","auth","sent","t0","error","abrupt","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","loadingBtn","setLoadingBtn","_useState3","_useState4","authError","setAuthError","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","_useState8","emailPhone","setEmailPhone","_useState9","_useState10","setPassword","navigate","useNavigate","_jsx","className","children","_jsxs","type","value","onChange","event","target","placeholder","autoComplete","concat","onSubmit","e","preventDefault","onClick","_userCredential$error","isError","validate","authenticate","code","PAGE","BROWSE","disabled","id","htmlFor","href","Link","to","SIGNUP","src","POSTER_BG","alt","SignInform","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","getAuth","confirmPassword","errors","test","length","undefined","trimmedConfirmPassword","trim","Object","keys"],"sourceRoot":""}