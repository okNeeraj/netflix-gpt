{"version":3,"file":"static/js/937.b499db48.chunk.js","mappings":"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","sources":["auth/register.js","components/SignUpForm.js","pages/SignUp.js","services/firebase.js","stores/userSlice.js","validator/validate.js"],"sourcesContent":["import { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../services/firebase\";\n\nconst register = async (email, password) => {\n  const response = {};\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    response.user = user;\n  } catch (error) {\n    response.error = error;\n  }\n  return response;\n}\n\nexport default register;\n","import { useState, useRef } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport register from \"../auth/register\";\nimport { PAGE } from \"../router/routes\";\nimport validate from \"../validator/validate\";\nimport { addUser } from \"../stores/userSlice\";\n\nconst SignUpForm = () => {\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [authError, setAuthError] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const dispatch = useDispatch();\n  const emailPhone = useRef(null);\n  const password = useRef(null);\n  const confirmPassword = useRef(null);\n\n  const handleSignUp = async () => {\n    // Client side validation\n    const isError = validate(\n      emailPhone.current.value,\n      password.current.value,\n      confirmPassword.current.value\n    );\n    setErrorMessage(isError);\n    if (isError) return;\n    setLoadingBtn(true);\n\n    // Send provided credential to server for validation\n    const userCredential = await register(emailPhone.current.value, password.current.value);\n    let errorMessage = null;\n    switch (userCredential?.error?.code) {\n      case \"auth/email-already-in-use\":\n        errorMessage = \"Email you provided is already registered.\"\n        break;\n\n      default:\n        errorMessage = \"Something went wrong with your credentials.\"\n        break;\n    }\n    setAuthError(errorMessage);\n    setLoadingBtn(false);\n\n    if (userCredential?.error) return;\n\n    const { uid, displayName, email, photoURL, phoneNumber } = userCredential.user;\n    dispatch(addUser({\n      uid: uid,\n      displayName: displayName,\n      photoURL: photoURL,\n      email: email,\n      phoneNumber: phoneNumber\n    }));\n  }\n\n  return (\n    <div className='bg-black/70 w-full sm:w-[450px] m-auto px-6 md:px-16 py-8 md:py-12 mx-4 sm:mx-auto flex items-center rounded-lg'>\n      <div className=\"w-full\">\n        <h1 className=\"mb-5 text-white text-3xl\">Sign Up</h1>\n        {authError && (\n          <div className=\"p-3 bg-[#e87c03] text-white text-xs rounded-md mb-5\">{authError}</div>\n        )}\n        <div className=\"mb-2 text-white\">\n          <input type=\"text\" ref={emailPhone} placeholder=\"Enter Email\" className={`px-4 py-4 w-full bg-[#333] border-b-2 rounded-[4px] focus:bg-[#4d4c4c] focus-visible:outline-none text-sm ${errorMessage?.emailPhone ? 'border-[#e87c03]' : 'border-transparent'}`} />\n          <div className=\"error px-1 py-2 text-[#e87c03] text-xs\">{errorMessage?.emailPhone}</div>\n        </div>\n        <div className=\"mb-2 text-white\">\n          <input type=\"password\" ref={password} placeholder=\"Set Password\" className={`px-4 py-4 w-full bg-[#333] border-b-2 rounded-[4px] focus:bg-[#4d4c4c] focus-visible:outline-none text-sm ${errorMessage?.password ? 'border-[#e87c03]' : 'border-transparent'}`} />\n          <div className=\"error px-1 py-2 text-[#e87c03] text-xs\">{errorMessage?.password}</div>\n        </div>\n        <div className=\"mb-2 text-white\">\n          <input type=\"password\" ref={confirmPassword} placeholder=\"Confirm Password\" className={`px-4 py-4 w-full bg-[#333] border-b-2 rounded-[4px] focus:bg-[#4d4c4c] focus-visible:outline-none text-sm ${errorMessage?.confirmPassword ? 'border-[#e87c03]' : 'border-transparent'}`} />\n          <div className=\"error px-1 py-2 text-[#e87c03] text-xs\">{errorMessage?.confirmPassword}</div>\n        </div>\n        <div className=\"my-2\">\n          <button onClick={handleSignUp} disabled={loadingBtn ? true : false} className=\"flex items-center justify-center px-4 py-3 mt-4 bg-red-primary text-white w-full rounded-[4px] disabled:bg-red-800\">\n            {\n              loadingBtn ? <div className=\"w-5 h-5 border-t m-[2px] border-gray-300 border-solid rounded-full animate-spin\"></div> : 'Sign Up'\n            }\n          </button>\n        </div>\n        <div className=\"text-md mt-8 flex items-center gap-2\">\n          <span className='text-sm'>\n            Already have an Account?\n          </span>\n          <Link to={PAGE.SIGNIN} className='text-white text-sm hover:underline'>Sign in now</Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUpForm;\n","import SignUpForm from \"../components/SignUpForm\";\nimport { POSTER_BG } from \"../utils/constants\";\n\nconst Registration = () => {\n  return (\n    <div className=\"relative text-gray-500 min-h-screen\">\n      <div className=\"absolute -z-[1] min-h-screenf h-full\">\n        <img src={POSTER_BG} alt=\"NetflixGPT\" className=\"w-screen h-full object-cover\" />\n      </div>\n      <div className=\"flex items-center min-h-screen bg-black/60\">\n        <SignUpForm />\n      </div>\n    </div>\n  )\n}\n\nexport default Registration;\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: \"netflixgpt-aaf25.firebaseapp.com\",\n  projectId: \"netflixgpt-aaf25\",\n  storageBucket: \"netflixgpt-aaf25.appspot.com\",\n  messagingSenderId: \"851568533147\",\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: \"G-CT2V2NGGPV\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\ngetAnalytics(app);\n\nexport const auth = getAuth();\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n  name: 'user',\n  // initialState: null,\n  initialState: null,\n  reducers: {\n    addUser: (state, action) => {\n      return action.payload\n    },\n    updateUser: (state, action) => {\n      return {\n        ...state,\n        ...action.payload\n      };\n    },\n    removeUser: (state, action) => {\n      return null\n    }\n  }\n});\n\nexport const { addUser, updateUser, removeUser } = userSlice.actions;\nexport default userSlice.reducer;\n\n","const validate = (emailPhone, password, confirmPassword) => {\n  const errors = {};\n\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  const phoneRegex = /^[0-9]{10}$/;\n\n  if (!emailRegex.test(emailPhone) && !phoneRegex.test(emailPhone)) {\n    errors.emailPhone = 'Please enter a valid email address or phone number.';\n  }\n\n  if (!password) {\n    errors.password = 'Password password cannot be empty.';\n  } else {\n    if (password.length < 8 || password.length > 16) {\n      errors.password = 'Password must be between 8 and 16 characters.';\n    }\n    if (!/(?=.*[a-z])/.test(password)) {\n      errors.password = 'Password must contain at least one lowercase letter.';\n    }\n    if (!/(?=.*[A-Z])/.test(password)) {\n      errors.password = 'Password must contain at least one uppercase letter.';\n    }\n    if (!/(?=.*\\d)/.test(password)) {\n      errors.password = 'Password must contain at least one digit.';\n    }\n  }\n\n  if (confirmPassword !== undefined) {\n    const trimmedConfirmPassword = confirmPassword.trim();\n    if (trimmedConfirmPassword === '') {\n      errors.confirmPassword = 'Confirm password cannot be empty.';\n    } else if (trimmedConfirmPassword !== password) {\n      errors.confirmPassword = 'Passwords do not match.';\n    }\n  }\n\n  return Object.keys(errors).length === 0 ? null : errors;\n}\n\nexport default validate;\n"],"names":["_x","_x2","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","email","password","response","userCredential","user","wrap","_context","prev","next","createUserWithEmailAndPassword","auth","sent","t0","error","abrupt","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","loadingBtn","setLoadingBtn","_useState3","_useState4","authError","setAuthError","_useState5","_useState6","errorMessage","setErrorMessage","dispatch","useDispatch","emailPhone","useRef","confirmPassword","_jsx","className","children","_jsxs","type","ref","placeholder","concat","onClick","_userCredential$error","isError","_userCredential$user","uid","displayName","photoURL","phoneNumber","validate","current","value","register","code","addUser","disabled","Link","to","PAGE","SIGNIN","src","POSTER_BG","alt","SignUpForm","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","getAuth","userSlice","createSlice","name","initialState","reducers","state","action","payload","updateUser","_objectSpread","removeUser","_userSlice$actions","actions","errors","test","length","undefined","trimmedConfirmPassword","trim","Object","keys"],"sourceRoot":""}