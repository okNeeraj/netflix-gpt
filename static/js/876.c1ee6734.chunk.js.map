{"version":3,"file":"static/js/876.c1ee6734.chunk.js","mappings":"iLAoDA,UA9CgB,YACGA,EAAAA,EAAAA,MAILC,EAAAA,GAqBZ,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKF,UAAS,kHACdE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yEAAwEC,UACrFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,gCAA+BC,SAAC,yBAaxD,C,yFC9BME,GAAMC,EAAAA,EAAAA,IAXW,CACrBC,OAAQC,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAOL,4CACPM,cAAe,kBAKjBC,EAAAA,EAAAA,IAAaV,GAEN,IAAMW,GAAOC,EAAAA,EAAAA,K,sHCrBdC,GAAYC,E,QAAAA,IAAY,CAC5BC,KAAM,OAENC,aAAc,KACdC,SAAU,CACRC,QAAS,SAACC,EAAOC,GACf,OAAOA,EAAOC,OAChB,EACAC,WAAY,SAACH,EAAOC,GAClB,OAAAG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKJ,GACAC,EAAOC,QAEd,EACAG,WAAY,SAACL,EAAOC,GAClB,OAAO,IACT,KAIGK,EAA4CZ,EAAUa,QAA9CR,EAAOO,EAAPP,QAASI,EAAUG,EAAVH,WAAYE,EAAUC,EAAVD,WACpC,KAAeX,EAAiB,O","sources":["pages/Profile.js","services/firebase.js","stores/userSlice.js"],"sourcesContent":["import { updateProfile } from \"firebase/auth\";\nimport { auth } from \"../services/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { updateUser } from \"../stores/userSlice\";\nimport { AVATAR_BLUE, AVATAR_RED } from \"../utils/constants\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  // https://wallpapers.com/images/hd/netflix-profile-pictures-1000-x-1000-88wkdmjrorckekha.jpg\n  const updatedInfo = {\n    displayName: \"Neeraj\",\n    photoURL: AVATAR_BLUE\n  }\n  const handleUpdateProfile = () => {\n    if (!auth.currentUser) return;\n    updateProfile(auth.currentUser, {\n      displayName: updatedInfo.displayName,\n      photoURL: updatedInfo.photoURL\n    }).then(() => {\n      const { displayName, photoURL } = auth.currentUser;\n      dispatch(updateUser({\n        displayName: displayName,\n        photoURL: photoURL\n      }))\n    }).catch((error) => {\n      console.log('Error -->', error)\n      // An error occurred\n    });\n\n    console.log('Updating...')\n  }\n\n  return (\n    <div className=\"search-page\">\n      <div className={`bg-skin w-full h-[430px] absolute top-0 -z-0 bg-gradient-to-b from-indigo-800 to-[#141414] transition-colors`}></div>\n      <div className=\"search relative\">\n        <div className=\"mt-3 px-4 md:px-12 py-3 min-h-[400px] flex justify-center items-center\">\n          <h1 className='text-5xl text-white font-bold'>Coming Soon...</h1>\n        </div>\n      </div>\n    </div>\n    // <div className=\"p-4\">\n    //   <h1>My Profile</h1>\n    //   <div className=\"\">\n    //     name: Neeraj <br />\n    //     photoUrl: 'https://sfsdf.com/image.jpg' <br />\n    //   </div>\n    //   <button className=\"px-6 py-3 bg-red-primary text-white rounded-md mt-3\" onClick={handleUpdateProfile}>Update Profile</button>\n    // </div>\n  )\n}\n\nexport default Profile;\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: \"netflixgpt-aaf25.firebaseapp.com\",\n  projectId: \"netflixgpt-aaf25\",\n  storageBucket: \"netflixgpt-aaf25.appspot.com\",\n  messagingSenderId: \"851568533147\",\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: \"G-CT2V2NGGPV\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\ngetAnalytics(app);\n\nexport const auth = getAuth();\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n  name: 'user',\n  // initialState: null,\n  initialState: null,\n  reducers: {\n    addUser: (state, action) => {\n      return action.payload\n    },\n    updateUser: (state, action) => {\n      return {\n        ...state,\n        ...action.payload\n      };\n    },\n    removeUser: (state, action) => {\n      return null\n    }\n  }\n});\n\nexport const { addUser, updateUser, removeUser } = userSlice.actions;\nexport default userSlice.reducer;\n\n"],"names":["useDispatch","AVATAR_BLUE","_jsxs","className","children","_jsx","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","auth","getAuth","userSlice","createSlice","name","initialState","reducers","addUser","state","action","payload","updateUser","_objectSpread","removeUser","_userSlice$actions","actions"],"sourceRoot":""}